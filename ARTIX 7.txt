-----------------------------------------------------------------------------------------------------------------
							ARTIX-7
-----------------------------------------------------------------------------------------------------------------
CMOD A7 es un modulo de desarrollo que utiliza un FPGA de la serie artix-7.
CMOD A7 es desarrollado por Digilent.
CMOD A7 incluye circuito USB-JTAG, lo cual nos permite programarlo desde cable USB.
CMOD A7 incluye un clock de 12 MHz conectado aL PIN L17

Pasos a seguir
1) Generar el archivo .VHD y el .XDC (de restricciones)
2) Run Synthesis (codigo HDL se traduce a una descripcion logica de como se deben interconectar los recursos internos del FPGA)
   luego Run Implementation
3) Generar el Bitstream (para generar el archivo .bit que será programado en el FPGA)
4) Con el CMOD A7 conectado a tu computadora, selecciona "Open Hardware Manager" en Vivado.
   Haz clic en "Open Target" y luego "Auto Connect".
   Haz clic en "Program Device" y selecciona el archivo .bit generado.
   Presiona "Program" para cargar el diseño en el FPGA.

NOTAS: 
-- Se recomienda no usar ieee.std_logic_arith.all, en cambio usar ieee.numeric_std.all.
-- Botones 3,3v: A18,B18 
-- Leds verdes: A17, C16. Conectados al anodo (Se activan con estado alto)
-- leds RGB(3,3v): C17, B16, B17. Conectados al catodo (se activan con estado bajo)  

-------------------------------------------------------MEMORIA SRAM---------------------------------------------
CMOD A7 incluye una SRAM de 512KB, tiene una interfaz paralela para el direccionamiento, de tamaño 19. (2^19 = 524.288 direcciones).
aclaracion: "512KB" es igual a "524.288 bytes", osea 524.288 direcciones que almacenan palabras de 8 bits.

        -- SRAM pins
        MemAdr        : out   std_logic_vector(18 downto 0);  -- External SRAM address
        MemDB         : inout std_logic_vector(7 downto 0);   -- External SRAM data
        RamOEn        : out   std_logic;                      -- External SRAM OEn (Output enable, al escribir no importa su estado, al leer deben estar en 0)
        RamWEn        : out   std_logic;                      -- External SRAM WEn ( 0 escribir,)
        RamCEn        : out   std_logic;                      -- External SRAM CEn (chip enable, en estado alto entra en standby)



